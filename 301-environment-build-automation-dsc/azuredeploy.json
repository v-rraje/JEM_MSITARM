{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 6,
      "metadata": {
        "description": "Name for the Virtual Machine."
      }
    },
    "localAdminUserName": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Username for the Virtual Machine."
      }
    },
    "localAdminPassword": {
      "type": "securestring",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "Local Password for the Virtual Machine."
      }
    },
    "domainJoinUserName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Username for domain joining"
      }
    },
    "domainJoinPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "SQLServerAccount": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "SQLServerPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "SQLAgentAccount": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "SQLAgentPassword": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "Password for domain joining"
      }
    },
    "numberOfIIS": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "numberOfSQL": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "Number of VMs to deploy"
      }
    },
    "userImageStorageAccountName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Storage Account where the VM image(s) will be created"
      }
    },
    "StorageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The Storage Account where the VM image(s) will be created"
      }
    },
    "domainName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "appID": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "appID tag for the Virtual Machine."
      }
    },
    "orgID": {
      "type": "string",
      "defaultValue": "",
      "minLength": 1,
      "metadata": {
        "description": "orgID tag for the Virtual Machine."
      }
    },
    "env": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "dev",
      "allowedValues": [
        "dev",
        "test",
        "prod"
      ],
      "metadata": {
        "description": "environment tag for the Virtual Machine."
      }
    },
    "snoozeDate": {
      "type": "string",
      "defaultValue": "1/1/16",
      "metadata": {
        "description": "Snooze date"
      }
    },
    "localAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Local admins that can login to the VMs. CSV list. must be users in partners. domain\\user."
      }
    },
    "SQLAdmins": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Local admins that can login to the VMs. CSV list. must be users in partners. domain\\user."
      }
    },
    "virtualNetwork": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Name for the VirtualNetwork"
      }
    },
    "vnetResourceGroup": {
      "type": "string",
      "defaultValue": "ERNetwork",
      "metadata": {
        "description": "Name for the Resource Group that contains VirtualNetwork"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "Subnet-1",
      "metadata": {
        "description": "Name for the subnet"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
    "PullServerRegistrationKey": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
    "PullServerRegistrationURI": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The pull server URI"
      }
    }
  },
  "variables": {

      "branch": "master",
      "folder":  "/301-multi-vm-domain-join-build-dsc/",
      "baseURL":  "[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'),variables('folder'))]",

      "CreateVMUrl": "[concat(variables('BaseURL'), 'nested/azuredeploy.json')]",
      
      "vmExtensionName": "ConfigureSQLServer",
      "customScriptFileToRun": "Configure-SQLServer.ps1",
      "customScriptFileUri": "[concat(variables('baseURL'),variables('customScriptFileToRun'))]",
      "arguments": "[concat(' -SQLServerAccount ', parameters('SQLServerAccount'), ' -SQLServerPassword ', parameters('SQLServerPassword'), ' -SQLAgentAccount ', parameters('SQLAgentAccount'), ' -SQLAgentPassword ', parameters('SQLAgentPassword'))]",
      "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File', ' ', variables('customScriptFileToRun'), ' ', variables('arguments'))]",

    "IIS": {
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "sku": "2012-R2-Datacenter",
      "DiskConfig": "IIS",
      "Role": "IIS",
      "vmSize": "Standard_A4",
      "diskCount": "1",
      "diskSize": 200
    },
    "SQL": {
      "imagePublisher": "MicrosoftSQLServer",
      "imageOffer": "SQL2012SP2-WS2012R2",
      "sku": "Enterprise",
      "DiskConfig": "SQLStd",
      "Role": "SQL",
      "vmSize": "Standard_D4",
      "diskCount": "3",
      "diskSize": 200
    },
    "AzureAutomation": {
        "Url": "https://github.com/Azure/azure-quickstart-templates/raw/master/dsc-extension-azure-automation-pullserver/UpdateLCMforAAPull.zip",
        "RegistrationKey": "[parameters('PullServerRegistrationKey')]",
        "registrationUrl": "[parameters('PullServerRegistrationURI')]",
        "nodeConfigurationName": "MSITNoPAK2.Corpnet",
        "configurationFunction": "UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
        "timestamp": "1/1/2015"
      }
  },
  "resources": [
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-CreateIISsvr')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreateVMUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "localAdminUserName": {
            "value": "[parameters('localAdminUserName')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "vmName": {
            "value": "[concat(parameters('vmName'),variables('IIS').Role,'-')]"
          },
          "DiskConfig": {
            "value": "[variables('IIS').DiskConfig]"
          },
          "vmSize": {
            "value": "[variables('IIS').vmSize]"
          },
          "DiskCount": {
            "value": "[variables('IIS').DiskCount]"
          },
          "DiskSize": {
            "value": "[variables('IIS').DiskSize]"
          },
          "numberOfInstances": {
            "value": "[parameters('numberOfIIS')]"
          },
          "imagePublisher": {
            "value": "[variables('IIS').imagePublisher]"
          },
          "imageOffer": {
            "value": "[variables('IIS').imageOffer]"
          },
          "sku": {
            "value": "[variables('IIS').sku]"
          },
          "userImageStorageAccountName": {
            "value": "[parameters('userImageStorageAccountName')]"
          },
          "StorageAccountType": {
            "value": "[parameters('StorageAccountType')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "appID": {
            "value": "[parameters('appID')]"
          },
          "orgID": {
            "value": "[parameters('orgID')]"
          },
          "env": {
            "value": "[parameters('env')]"
          },
          "snoozeDate": {
            "value": "[parameters('snoozeDate')]"
          },
          "localAdmins": {
            "value": "[parameters('localAdmins')]"
          },
          "SQLAdmins": {
            "value": ""
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "virtualNetwork": {
            "value": "[parameters('virtualNetwork')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          },
          "PullServerRegistrationKey": {
            "value": "[variables('AzureAutomation').RegistrationKey]"
          },
           "PullServerRegistrationURI": {
            "value": "[variables('AzureAutomation').registrationUrl]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-01-01",
      "name": "[concat(parameters('vmName'),'-CreateSQLsvr')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('CreateVMUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "localAdminUserName": {
            "value": "[parameters('localAdminUserName')]"
          },
          "localAdminPassword": {
            "value": "[parameters('localAdminPassword')]"
          },
          "domainJoinUserName": {
            "value": "[parameters('domainJoinUserName')]"
          },
          "domainJoinPassword": {
            "value": "[parameters('domainJoinPassword')]"
          },
          "vmName": {
            "value": "[concat(parameters('vmName'),variables('SQL').Role,'-')]"
          },
          "DiskConfig": {
            "value": "[variables('SQL').DiskConfig]"
          },
          "vmSize": {
            "value": "[variables('SQL').vmSize]"
          },
          "DiskCount": {
            "value": "[variables('SQL').DiskCount]"
          },
          "DiskSize": {
            "value": "[variables('SQL').DiskSize]"
          },
          "numberOfInstances": {
            "value": "[parameters('numberOfSQL')]"
          },
          "imagePublisher": {
            "value": "[variables('SQL').imagePublisher]"
          },
          "imageOffer": {
            "value": "[variables('SQL').imageOffer]"
          },
          "sku": {
            "value": "[variables('SQL').sku]"
          },
          "userImageStorageAccountName": {
            "value": "[parameters('userImageStorageAccountName')]"
          },
          "StorageAccountType": {
            "value": "[parameters('StorageAccountType')]"
          },
          "domainName": {
            "value": "[parameters('domainName')]"
          },
          "appID": {
            "value": "[parameters('appID')]"
          },
          "orgID": {
            "value": "[parameters('orgID')]"
          },
          "env": {
            "value": "[parameters('env')]"
          },
          "snoozeDate": {
            "value": "[parameters('snoozeDate')]"
          },
          "localAdmins": {
            "value": "[parameters('localAdmins')]"
          },
          "SQLAdmins": {
            "value": ""
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "virtualNetwork": {
            "value": "[parameters('virtualNetwork')]"
          },
          "vnetResourceGroup": {
            "value": "[parameters('vnetResourceGroup')]"
          },
          "ouPath": {
            "value": "[parameters('ouPath')]"
          },
          "PullServerRegistrationKey": {
            "value": "[variables('AzureAutomation').RegistrationKey]"
          },
          "PullServerRegistrationURI": {
            "value": "[variables('AzureAutomation').registrationUrl]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('vmName'),copyindex(1),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "copy": {
          "name": "ConfigureMachineRoleLoop",
          "count": "[parameters('numberOfSQL')]"
      },
      "location": "[resourceGroup().location]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.7",
        "autoUpgradeMinorVersion": "true",
        "forceUpdateTag": "v.1.4",
        "settings": {
          "fileUris": [
            "[variables('customScriptFileUri')]"
          ],
          "commandToExecute": "[variables('commandToExecute')]"
        },
        "protectedSettings": {          
        }
      }
    }
  ]
}
